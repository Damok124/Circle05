/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ShrubberyCreationForm.cpp                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: zharzi <zharzi@student.42angouleme.fr>     +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/05/07 15:22:15 by zharzi            #+#    #+#             */
/*   Updated: 2023/05/14 20:39:09 by zharzi           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ShrubberyCreationForm.hpp"

//=-= Coplian form and special constructor =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

ShrubberyCreationForm::ShrubberyCreationForm()
: AForm("Shrubbery Creation Form", 145, 137)
{
	this->target = "[unknown]";
	// std::cout << "--ShrubberyCreationForm default constructor--" << std::endl;
}

ShrubberyCreationForm::ShrubberyCreationForm(std::string const target)
: AForm("Shrubbery Creation Form", 145, 137)
{
	this->target = target;
	// std::cout << "--ShrubberyCreationForm param constructor--" << std::endl;
}

ShrubberyCreationForm::ShrubberyCreationForm(ShrubberyCreationForm const& source)
: AForm(source.getName(), source.getSignatureGrade(), source.getExecutionGrade())
{
	// std::cout << "--ShrubberyCreationForm copy--" << std::endl;
}

ShrubberyCreationForm& ShrubberyCreationForm::operator=(ShrubberyCreationForm const& source)
{
	(void)source;
	// std::cout << "--ShrubberyCreationForm assignation--" << std::endl;
	return (*this);
}

ShrubberyCreationForm::~ShrubberyCreationForm()
{
	// std::cout << "--ShrubberyCreationForm destructor--" << std::endl;
}

//=-= Accessors  functions =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

std::string const	ShrubberyCreationForm::getTarget() const
{
	return (target);
}

//=-= Functions  =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

static void	printTrees(std::ofstream& file)
{
	file << "====--------:::::::::::::::::::-----------::::----------------------------------------=--------------------------------::::::::::::-------------::-::::::::::::::::::::" << std::endl;
	file << "==----=----::::::::::::::::::::-----:::---::::----:-------------------------------------=------------------------------:::::::::::------------::::-::--:::::::::::--:::" << std::endl;
	file << "------------:::::::::::::::::::----::::-:::::::::::::--:---------------------::--------------------------------------::::::--::::-------------:::::----:::::::::---::::" << std::endl;
	file << "-------:::--::::::::::::::::::::::::::::::::::::::::::::::-------------------:::-:::----------------------------:::::::::::-----:--------::::::::::---:::::::::------::" << std::endl;
	file << "---::::::::--::::::::::::::::::::::::::::::::::::::::::::::--------------::::::::::::----:--------------------::::::::::::::---::--::-::::::::::::-----::::------::-:::" << std::endl;
	file << "----::::::::---::::::::::::::::::::::::::::::::::::::-::::------::::::-:::::::::::::::::::------------------::::::::::::::::::::::::::::::::::::::---:::--------:::::::" << std::endl;
	file << "----------------:::::::::::::::::::::::::::::::::::::::::::--::::::::::::::::::::::::::::::--:::--:::-::---::::::::::::::::::::::::::::::::::::::::::::--------::::::::" << std::endl;
	file << "-----------------::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::---:::::::::::::::::::::::::::::::::::::::::::::::::----------:-::::::" << std::endl;
	file << "----------------:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::--=:-::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::---------:----:::::" << std::endl;
	file << "-----:----------::::::::::::::::::::::::::::::::::::::::::::::::::---:::::::--=-=+--:=-:-:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::--------:::::::::::" << std::endl;
	file << "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-+=-=+-=---=++==-++++=-:::::::::::::::::::::::::::::::::::::::::::::::::::::::::-------::::::::::::" << std::endl;
	file << ":::::::::::::::::::::::::::::::::::-:::::::::::::::::::::::::::-=====+=-======+-+-=*==*=+++:--:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::" << std::endl;
	file << "--:::::::::::::::::::::-:::::--::------::::::::::::::::::::::-::-+*+##=+=++*=++--+**+=+=+++===-:.-:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::" << std::endl;
	file << "--::::::::::::::::::-::::::::--::------:::::::::::::::::::-*++-+-****#*#*+*#**#+=+***++=*+++++=-==:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::" << std::endl;
	file << "---::::::::::::::::-::::::::::::::::--:::::::::::::::::::=+**+=*##****#**#****###+*##**##*++*+*+*=-::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::" << std::endl;
	file << "---:::::::::--:::::::::::::::::::::::::::::::::::::::::--=***++=*#######*++#*##%#######*#*#*++=++==-:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..::" << std::endl;
	file << "----::::::::::::::::::::::::::::::::::::::::::::::::=+--++==***=######%####%####*###*#%*#%###*+**+--=-:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::......" << std::endl;
	file << "------:::----::::::::::::::::::::::::::::::::::::::::-+**#-+**+**##%#+#%#%###*#####*##*#*###*##*+==-:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.....:" << std::endl;
	file << "-=------:----:::::::::::::::::::::::::::::::::=+*+-::=*#**:-+==#***######%+###*#%*#######+*##**-::::::::::::::::::::::::::::::::::::::.:::::::::::::::::::::::::::...::" << std::endl;
	file << "------:--::::::::::::::::::::::::::::::::::::::--=+=+**+===++==***=*#*##*****#**-:*=-+#**+*##*+-:::::+:::::::--:::::::::::::::::::::::::::.:::::::::::::::::::::....:::" << std::endl;
	file << "--::::::::::::::::::::::==::::::::::=-=--==-::::::=**####=*##+*###**##%%#*##**+====*=+#%+*#**=+*+::::-+::::=##*:::::::::::::::::::::::::::...::::::::::::::::::...:::::" << std::endl;
	file << "---:::::::::::::::::+--**=--+=+-:=++*+*-+**+:::::===+###+###*+*#**#**#%*+##*+++*++*#+=%#+-+#+=+**##*+-==::+##*:::::::::::::...:::::-::=-::-::...:::::::::::::.....:::::" << std::endl;
	file << "----:::::::::-==-:-=*+-*+**=++++*+=+*#*=*#*=--:::::=+**#*###+**##%%*+*#*+==*#######*==#*:--+=+**==+-+=:+:=#*=::::::::::::-==:-:---==-++=+-==-:::::.::::::::::.....:::::" << std::endl;
	file << ":::--::::::::-=-=*+=+*=***++****#*+*++=++-+**---=-:+*#*##*##########*-*+*=##+*##*+*#++=++**++*++======---*=::::::::::::::**=-:=++=*+=*+++++==++=::-:.::::::::::::::::::" << std::endl;
	file << ":::-:::::::::*+**#**#*+-=+=*++*+##****=++-+*++#*+-++****+*####*****#*#++*+#++*%%%%##%#+++#*#*=*+===-**+-+-:::::::::::-=*=-=-:+=+++++**=*++==-+*+::++++-::::::::::::::::" << std::endl;
	file << ":::::::::::++=*****#***#****=+*###+=**#*+****+*#*+====*=+##*#*#%#**##+#*##*++#%#*##+##+****+==+==+*****+==+=::::::::---*#*++#+++***+*#++*+=-=*+=--=-=+=-:::::::..::::::" << std::endl;
	file << "::::-++-::=*++*###****###**#=***+**++***#**##=++=--##*++-##*#=*#+**####**++*+###**+##**##*##==+*+=++**++++=::::::::-=:=*++-=+******#++++*+=--=++*+=++=+=-::-::...::::::" << std::endl;
	file << "::::::-==-++**=*#*+*#####*#+####+*###++#*=+++***+#=+#%*+=+**-+*+:-*#*#**#*=*%%%###*##****+##++*+==++*+***+==-:::...:=-++++=*++=+==+*++*=**=++==+=++++:-==+++=:...::::::" << std::endl;
	file << "::::::+#*+:-=+*********+#*#**#**+##*##*#*#+*+*#+-**:=*%#+-=*++*=-:-#+##**#**%#####+=*#%###*********###****==--:::::..-+++*##+*=+*+***+**++**#*##+=+++:-+===--::::...:::" << std::endl;
	file << "::::::=********#*++****++*+++*+*#%#*###+***+-++=====:-+=--+#+**=+=-*+###***+#####==*%###**##*+##**###++++*:::::::::--=*+++**#**+*#*#***=++**+=++++***-+**+==+=--::....." << std::endl;
	file << "::-=-==+*++#******+**=+*#*+-*++*+#####**##*###+=-=++=:-==+#*:+=:::=#++:+=*+**##*+=**####=**###*=####*****=---=+*+::+*++-=++-+*+**##*#*+=++*+*#***#**#+#*+=*+=*-=::=-..." << std::endl;
	file << ":-:::=*#**+#**=*###**-++*#*++#=*##*###*#**#+---+#+=-::::--*==-+--+***#+====**#%*=*#***-+:-*##+#+##*******+*=*+=-:::-+*-=**+**#**=*****#%##**#*#*#+==******==*=-=.=++=:." << std::endl;
	file << "::::-:=--***++++*#***+*==+*+**+=**+*####-++.:.-:..--:-*#++###=-*=::--::::=##*###*##*=-:**:#*--#+++###*++#*=-::::::::+-..:###********+###%#*########*+****++=+==-===++-." << std::endl;
	file << ":::-==---=+*+==#*++-****:-++=**:*#+#=*++++=::::::.:-=#*=--=++-::*+::::::-=:-=+##*##*+--=#-::-*##+=#+*++-++====-:=**+=:.:*####*+#%%#####****#=****##***##**###+=+===+=:." << std::endl;
	file << ":::=:-==-#+=+**#**=+=***++**=##****###**++::..:::-:-+*+=:::-=-==+=*=-::-=-:::-==###*-++%%#:=*#*+##**+==**+-::-:::++**+=+*=*+*#*+#%#**##+#%####%###++**+=*###*+**++*+-::" << std::endl;
	file << "::::::::-=+==+*+##+=:-*=*****#*##+#*:**==::::::::-=::::::.+*=-:::::++--:::-=*######**-++##=*#*:::#####==::::+++--====-+**+#==:=*+%**+*-*##*+%%###%######***+**+--+=++:." << std::endl;
	file << "::::::::::-*+=****+#=:+=:=*#%%%####++++-::::::::::::::::::=:::::::::++::--::##****#*#+*#*+=#*#+-+**#####*::-#*=:::::--=+===#=-::+#%%##+#%%########**%#***##*+--=++-==:." << std::endl;
	file << "::::::::::-:::-+#**-+***-::*%%####+==-:::::::::.:.::::::::::::::::::=+=-::-=++**+*#*####**#=*-+=-:*-+*#=+::*=:::::==-:=+-=-=#*=*%%%#=-=#%##*##*++-**%*#***#+*#*==+=++-." << std::endl;
	file << "::::::::::::::::=+*+--=++*+****##++=:::::::..:::::::::::::::::::::::--*::===*+***###%###*###+++=-++:-+=-+===:::::-:::::-+*#*#+*%%%%%##*####+=*+-=+#%#*######****++*:=:." << std::endl;
	file << "::::::::::::::---:-=++-:==+*#***+=:::::::::::::::::::::::::::::::::=:-=++==+**+**-+#%#*+#+#*###**#*+==#=:-=:---::::::::::--+=*%%%%%%%%###%#%+*--########+###*+=-=+=::.." << std::endl;
	file << ":::::::::::-------::=+*-::=###**=::::::::::::::::::::::::::::::::::=:-:=*+=*++++*-=#+#++*+****+%**-::=-:+#*-:::--::::::::::::=*###%#%%**%%%%*##%%%%%#***###==--=---::::" << std::endl;
	file << "::::::::::::-::---::::-+-::=+++++:::::::::::::::::::::::::::::::::---:::++*++*-=*:===++#*=::::++++==%#=-:-+#-:::::::::::::::::+=%%%#%#**%%%%%%%%%%+=+=*+--=-:::::::::::" << std::endl;
	file << ":::::::::::::::::::::::-*=-+++=+*:::::::::::::::::::::::::::::::::=::::--*****==+-=.*=*=###+:-##:::=##-:--:=:::::::::::::::::::*#%%%##*#%%%%%%##*-:::::+=:::::..::::.::" << std::endl;
	file << "-::::::::::::::::----:::-+++***+*:::::::::::::::::::::::::::::::::=:::--+****++====:====:-=+:++:::::=::::::::::::::::::::::::::=*%#%####%#=#%#++::::::::::::::.::::::::" << std::endl;
	file << ":::::---::::::::::--::::-=******=:::::::::::::::::::::::::::::::::=:::--*=-*=*#*=+=---=+-::-:::::::::::::::::::::::::::::::::::-**##*###%%##=+=-:::::::::::::::::::::::" << std::endl;
	file << "---::---::::::::::::::::-:+++++*+:::::::::::::::::::::::::::::::::-::::=*=:+==-+#*++==++*::-:::::::::::::::::::::::::::::::::::-#+#*###*###-=:=::::::::::::::::::::::::" << std::endl;
	file << "--:::::::::::::::::::::::-=+==+*=:::::::::::::::::::::::::::::::::-::::*==-+=:::+#+=+*++=+:--::::::::::::::::::::::::::::::::::=*##%%##*##-:+:-:::::--:::::::::::::::::" << std::endl;
	file << "--:-:::::::::::::::::::-=======+-:::::::::::::::::::::::::::::::::-::::#+:=+--::***+++*+=:+=:::::::::::::::::::::::::::::::::::***######**.-+:-:::::--:::::::::::::::::" << std::endl;
	file << "---::::::::::::::::::::***++====::::::::::::::::::::::::::::::::::-::::#--+-::--*##+=+*+-::=+::::::::::::::::::::::::::::::.:-+*-*###*##*+=:+:=::::::::::::::::::::::::" << std::endl;
	file << "-::::::::::::::::::::::-==+++===-:::::::::::::::::::::::::::::::::=:::-*:*-----+++##*+*=+-::==::::::-:::::::::::::::::::::..:+#=:##*#*#****===-=:::::::::::::::::::::::" << std::endl;
	file << "--::::::::::::::::::::::+-*+=====-::::::::::::::::::::::::::::::::=:::+**#***#**#*+**#***+=-:*::::::-::::::::::::::::::::::-+*#-+###*##++===::-+=::::::::::::::::::::::" << std::endl;
	file << "---::::::::::::::::::::::+#*+=+====-:::::::::::::::-:::::::::::::--:=##**####*+++##*#*###**++*+-::::::::::::::::::::::::=-=##=*+*#####**+=-+:::++::::::::::::::::::::::" << std::endl;
	file << "-:--:::::::::::::::::::::=##**++=--++=-::::::::::::::::::::::::++++***#*#**##*****#*++****##*****++==-::::::::::::::-:::=+###%##*++###*#**-*=-=*+-=-:::::::::::::::::::" << std::endl;
	file << "----:::::::::::::::::::::-=*##*****+++*+=---=-:-:-:::::::::::-=++*******+#****#*#*#*##*+**#**++*******+-:::::-*+++*+==+=*++******++*++*+*+===#****+====+==-::::::::::::" << std::endl;
	file << "--:-:::::::::::::::-+++=+****+*+*=++*+=*=*+==+++*+=++*=:::::--==-----------------------------------------:::==++*++**#**+**+*****++*+*#**+=+++*=*++++*+++++++--::::::::" << std::endl;
	file << "---:::::::::::::+*++++++++++++++++++++=+++++**+*++++++++-:::+:-*==-----------------------------------==--:...:+#%%%%%%%%%%%%%%%%%#####################%%####%##*=::::::" << std::endl;
	file << "---::::::::::::::=####################################=::::--::*==-----------------------------------=+:-::::.:=#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#-::::::::" << std::endl;
	file << "---:::::::::::::::-#################################*+:::::---:++=-----------------------------------==:-::::..-+%%%%%%%#%###########%###%%%%%########%%#%#%#-:::::::::" << std::endl;
	file << "----::::::::--:::::+**#**********************#*#****#-::::-==-:-+=----------------------------------=+-:-::::..:=#%%%%%%##%%################################+:::::-::::" << std::endl;
	file << "-----:::::::----:::-#********************************:::::--=-::*=---------------------------------==+.:-.::....-+%%%#########################%########%%###:::::::::::" << std::endl;
	file << "-----::::::::----:::+******************************#=::::::--+::+=---------------------------------===:-::::::..:=#%%##%###################%############%##=:::::::::::" << std::endl;
	file << "==----::::::::::::::-#*#*##########********#****#***-:::::::-+-:=+=----------------------------=====+::=:::::::::=*%%%%#%%%##############%%%##############*::::::::::::" << std::endl;
	file << "-===--:::::::::::::::#****#***********************+*+--===+++*+++*+=========+=======================+:-----------++%#%%%%%%%%%#****#######################=::::::::::::" << std::endl;
	file << "-----::::::::--------*#######%######%%%%%%%%#####**##***********+*#*******########*****************#+===*#####**+#####*****####*#**#######################+-:::::::::::" << std::endl;
	file << "------:::::-========+*****####################***************++++*++++*++++++++++++++*+****+++**++++=----+******++***+++***##%#########%%%%%%%%%%#**+++++=++*+=-:::::::" << std::endl;
	file << "------:::--=========================+=++++=+++++++++++++++++******+++++=+++++++++++++++++++++++++=++=+++=+++++++++============================================+=-::::::" << std::endl;
	file << "===--::::=++*==+*+**++++++==++++++++++++++*****************************=***************+++******++++++**+++****+**++=+=+++++++++++++++++++++++++++++++=+++*+==+*=-:::::" << std::endl;
}

//=-= Methods  =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

bool	ShrubberyCreationForm::execute(Bureaucrat const & executor) const
{
	std::string filename = getTarget() + "_shrubbery";
	try
	{
		if (getIsSigned() == false)
			throw (UnsignedForm());
		if (executor.getGrade() > getExecutionGrade())////////tester car bug
			throw (GradeTooLowException());
		std::ofstream file(filename.c_str());
		if (!file.is_open())
			throw (std::ios_base::failure("File creation " + filename + "failed"));
		else
		{
			printTrees(file);
			return (true);
		}
	}
	catch (std::exception& e)
	{
		std::cout << e.what() << std::endl;
	}
	return (false);
}

//=-= Exception -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

const char*	ShrubberyCreationForm::UnsignedForm::what() const throw()
{
	return ("This form is not signed. Impossible to execute it.");
}

//=-= Stream =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

std::ostream& operator<<(std::ostream& out, ShrubberyCreationForm const& inst)
{
	out << "Form " << inst.getName() << " :"
	<< "\n\t- Signed\t\t: " << std::boolalpha << inst.getIsSigned()
	<< "\n\t- Signature grade\t: " << inst.getSignatureGrade()
	<< "\n\t- Execution grade\t: " << inst.getExecutionGrade() << std::endl;
	return (out);
}
